name: Impulse BBS Build & Release

on:
  push:
    branches:
      - main

env:
  DOCKER_DRIVER: overlay2
  APT_CACHE_DIR: ${{ github.workspace }}/apt-cache
  DEBIAN_FRONTEND: noninteractive

jobs:
  build:
    name: Build Impulse BBS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install and cache APT packages
        uses: Eeems-Org/apt-cache-action@v1.4
        with:
          packages: dosbox xvfb curl

      - name: Prepare directories
        run: |
          mkdir -p /tmp/impulse_dosbox build output include

      - name: Copy Borland Pascal files
        run: cp -r BP /tmp/impulse_dosbox/bp

      - name: Create dosbox.conf
        run: |
          cat > dosbox.conf << 'EOF'
          [sdl]
          windowresolution=800x600
          output=surface
          autolock=false

          [dosbox]
          machine=svga_s3
          memsize=16

          [cpu]
          core=auto
          cputype=auto
          cycles=10000

          [mixer]
          nosound=true

          [midi]
          mpu401=none

          [sblaster]
          sbtype=none

          [gus]
          gus=false

          [speaker]
          pcspeaker=false

          [autoexec]
          mount c: /tmp/impulse_dosbox
          mount d: $GITHUB_WORKSPACE/source
          mount e: $GITHUB_WORKSPACE/output
          mount f: $GITHUB_WORKSPACE/include
          d:
          set PATH=c:\\bp\\bin;%PATH%
          call c:\\build.bat
          exit
          EOF

      - name: Create build.bat
        run: |
          cat > /tmp/impulse_dosbox/build.bat << 'EOF'
          @echo off
          echo === Impulse BBS Compilation ===
          if not exist c:\bp\bin\bpc.exe (
            echo [ERROR] Borland Pascal not found
            goto end
          )
          echo [SUCCESS] Found Borland Pascal compiler
          d:
          if not exist imp.pas (
            echo [ERROR] imp.pas not found
            goto end
          )
          echo [LOG] Current directory contents:
          dir *.pas

          echo [LOG] === STEP 1: BUILD PHASE ===
          bpc -$G+ -B -Uf:\ -Ee:\ imp.pas || goto buildfail
          echo [SUCCESS] Build phase completed

          :buildfail
          echo [ERROR] Build phase failed
          goto end

          echo [LOG] === STEP 2: FINAL COMPILATION ===
          bpc -Uf:\ -Ee:\ imp.pas || goto compfail
          echo [SUCCESS] Final compilation completed

          :compfail
          echo [ERROR] Final compilation failed
          goto end

          :checkfiles
          e:
          if exist IMP.EXE echo [SUCCESS] IMP.EXE created
          if exist IMP.OVR echo [SUCCESS] IMP.OVR created
          dir *.exe *.ovr

          :end
          echo [LOG] === BUILD PROCESS COMPLETE ===
          EOF

      - name: Run DOSBox build
        run: xvfb-run -a dosbox -conf dosbox.conf -noconsole

      - name: Debug list workspace after build
        run: |
          echo "Workspace contents:"
          ls -R $GITHUB_WORKSPACE
          echo "Output directory contents:"
          ls -la output

      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: impulse-bbs-build-${{ github.run_id }}
          path: |
            output/*.EXE
            output/*.OVR
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: impulse-bbs-build-${{ github.run_id }}
          path: output/

      - name: Create Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_id }}
          name: Impulse BBS Build ${{ github.run_id }}
          files: |
            output/IMP.EXE
            output/IMP.OVR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Notification (if configured)
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
