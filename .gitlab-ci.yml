# GitLab CI/CD Pipeline for Impulse BBS Automated Builds

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2

build_impulse:
  stage: build
  image: ubuntu:20.04
  only:
    - main
  before_script:
    - echo "üöÄ Building Impulse BBS - Pipeline $CI_PIPELINE_ID"
    - echo "üìù Commit $CI_COMMIT_SHORT_SHA by $CI_COMMIT_AUTHOR"
    - echo "üí¨ Message $CI_COMMIT_MESSAGE"
    - echo "üì¶ Installing dependencies..."
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y dosbox xvfb curl
    - echo "üìÅ Creating build directories..."
    - mkdir -p /tmp/impulse_dosbox
    - mkdir -p build

  script:
    - echo "üì¶ Setting up Borland Pascal environment..."
    - cp -r BP /tmp/impulse_dosbox/bp
    
    - echo "‚öôÔ∏è Creating DOSBox configuration..."
    - echo "[sdl]" > dosbox.conf
    - echo "windowresolution=800x600" >> dosbox.conf
    - echo "output=surface" >> dosbox.conf
    - echo "autolock=false" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[dosbox]" >> dosbox.conf
    - echo "machine=svga_s3" >> dosbox.conf
    - echo "memsize=16" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[cpu]" >> dosbox.conf
    - echo "core=auto" >> dosbox.conf
    - echo "cputype=auto" >> dosbox.conf
    - echo "cycles=10000" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[mixer]" >> dosbox.conf
    - echo "nosound=true" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[midi]" >> dosbox.conf
    - echo "mpu401=none" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[sblaster]" >> dosbox.conf
    - echo "sbtype=none" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[gus]" >> dosbox.conf
    - echo "gus=false" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[speaker]" >> dosbox.conf
    - echo "pcspeaker=false" >> dosbox.conf
    - echo "" >> dosbox.conf
    - echo "[autoexec]" >> dosbox.conf
    - echo "mount c: /tmp/impulse_dosbox" >> dosbox.conf
    - echo "mount d: $PWD/source" >> dosbox.conf
    - echo "mount e: $PWD/output" >> dosbox.conf
    - echo "mount f: $PWD/include" >> dosbox.conf
    - echo "d:" >> dosbox.conf
    - echo "set PATH=c:\\bp\\bin;%PATH%" >> dosbox.conf
    - echo "call c:\\build.bat" >> dosbox.conf
    - echo "exit" >> dosbox.conf
    
    - echo "üìù Creating DOS build script..."
    - echo "@echo off" > /tmp/impulse_dosbox/build.bat
    - echo "echo === Impulse BBS Compilation ===" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo "if exist c:\\bp\\bin\\bpc.exe goto bpfound" >> /tmp/impulse_dosbox/build.bat
    - echo "echo ERROR: Borland Pascal not found" >> /tmp/impulse_dosbox/build.bat
    - echo "goto end" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":bpfound" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Found Borland Pascal compiler" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo "d:" >> /tmp/impulse_dosbox/build.bat
    - echo "if exist imp.pas goto impfound" >> /tmp/impulse_dosbox/build.bat
    - echo "echo ERROR: imp.pas not found" >> /tmp/impulse_dosbox/build.bat
    - echo "goto end" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":impfound" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Found imp.pas in source directory" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Step 1: Building with flags..." >> /tmp/impulse_dosbox/build.bat
    - echo "bpc -\$G+ -B -Uf:\\ -Ee:\\ imp.pas" >> /tmp/impulse_dosbox/build.bat
    - echo "if errorlevel 1 goto buildfail" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Build step completed" >> /tmp/impulse_dosbox/build.bat
    - echo "goto step2" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":buildfail" >> /tmp/impulse_dosbox/build.bat
    - echo "echo ERROR: Build step failed" >> /tmp/impulse_dosbox/build.bat
    - echo "goto end" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":step2" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Step 2: Final compilation..." >> /tmp/impulse_dosbox/build.bat
    - echo "bpc -Uf:\\ -Ee:\\ imp.pas" >> /tmp/impulse_dosbox/build.bat
    - echo "if errorlevel 1 goto compfail" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Compilation completed" >> /tmp/impulse_dosbox/build.bat
    - echo "goto end" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":compfail" >> /tmp/impulse_dosbox/build.bat
    - echo "echo ERROR: Final compilation failed" >> /tmp/impulse_dosbox/build.bat
    - echo "" >> /tmp/impulse_dosbox/build.bat
    - echo ":end" >> /tmp/impulse_dosbox/build.bat
    - echo "echo Build process finished" >> /tmp/impulse_dosbox/build.bat
    
    - echo "üî® Starting headless DOSBox compilation..."
    - xvfb-run -a dosbox -conf dosbox.conf -noconsole
    
    - echo "üîç Checking compilation results..."
    - |
      if [ -f "output/IMP.EXE" ] && [ -f "output/IMP.OVR" ]; then
        echo "‚úÖ Compilation successful!"
        
        BUILD_DIR="build/build-$CI_PIPELINE_ID"
        mkdir -p "$BUILD_DIR"
        
        cp output/IMP.EXE "$BUILD_DIR/"
        cp output/IMP.OVR "$BUILD_DIR/"
        
        # Create build info file
        echo "Impulse BBS 7.1 Build Information" > "$BUILD_DIR/build-info.txt"
        echo "================================" >> "$BUILD_DIR/build-info.txt"
        echo "Build Date: $(date)" >> "$BUILD_DIR/build-info.txt"
        echo "Pipeline ID: $CI_PIPELINE_ID" >> "$BUILD_DIR/build-info.txt"
        echo "Job ID: $CI_JOB_ID" >> "$BUILD_DIR/build-info.txt"
        echo "Commit SHA: $CI_COMMIT_SHA" >> "$BUILD_DIR/build-info.txt"
        echo "Commit Author: $CI_COMMIT_AUTHOR" >> "$BUILD_DIR/build-info.txt"
        echo "" >> "$BUILD_DIR/build-info.txt"
        echo "Files:" >> "$BUILD_DIR/build-info.txt"
        ls -la "$BUILD_DIR"/*.EXE "$BUILD_DIR"/*.OVR >> "$BUILD_DIR/build-info.txt"
        
        echo "üéâ Build complete!"
        ls -la "$BUILD_DIR/"
        
        echo ""
        echo "üìÅ BUILD ARTIFACTS READY:"
        echo "Browse files: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/browse/build/build-$CI_PIPELINE_ID/"
        echo "Download ZIP: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/download"
        echo "Direct IMP.EXE: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/build-$CI_PIPELINE_ID/IMP.EXE"
        echo "Direct IMP.OVR: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/build-$CI_PIPELINE_ID/IMP.OVR"
        
        # Update latest build page if it exists
        if [ -f "latest-build.html" ]; then
          echo "üìÑ Creating latest build page..."
          sed -i "s/PIPELINE_ID_PLACEHOLDER/$CI_PIPELINE_ID/g" latest-build.html
          sed -i "s/JOB_ID_PLACEHOLDER/$CI_JOB_ID/g" latest-build.html
          sed -i "s/BUILD_DATE_PLACEHOLDER/$(date)/g" latest-build.html
          sed -i "s/COMMIT_SHA_PLACEHOLDER/$CI_COMMIT_SHORT_SHA/g" latest-build.html
          cp latest-build.html build/
          echo "üìÑ Latest build page: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/latest-build.html"
        fi
        
        # Send Slack notification if configured
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          echo "üì± Sending Slack notification..."
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üéâ Impulse BBS Build #'$CI_PIPELINE_ID' Complete!","attachments":[{"color":"good","fields":[{"title":"üìÇ Browse Files","value":"<'$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/browse/build/build-'$CI_PIPELINE_ID'/|View Online>","short":true},{"title":"üì¶ Download","value":"<'$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/download|Download ZIP>","short":true},{"title":"üíæ Direct Files","value":"<'$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/raw/build/build-'$CI_PIPELINE_ID'/IMP.EXE|IMP.EXE> | <'$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/raw/build/build-'$CI_PIPELINE_ID'/IMP.OVR|IMP.OVR>","short":false}],"footer":"Commit: '$CI_COMMIT_SHORT_SHA' by '$CI_COMMIT_AUTHOR'"}]}' \
          "$SLACK_WEBHOOK_URL" || echo "Slack notification failed (not critical)"
        fi
        
      else
        echo "‚ùå Compilation failed or output files not found"
        echo "Output directory contents:"
        ls -la output/ || echo "No output directory found"
        exit 1
      fi

  artifacts:
    name: "impulse-bbs-build-$CI_PIPELINE_ID"
    paths:
      - build/build-$CI_PIPELINE_ID/
      - build/latest-build.html
    expire_in: 1 year
    public: true
    when: always

