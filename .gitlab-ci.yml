# GitLab CI/CD Pipeline for Impulse BBS Automated Builds

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2

build_impulse:
  stage: build
  image: ubuntu:20.04
  only:
    - main
  before_script:
    - echo "Building Impulse BBS - Pipeline $CI_PIPELINE_ID"
    - echo "Commit $CI_COMMIT_SHORT_SHA by $CI_COMMIT_AUTHOR"
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y dosbox xvfb curl
    - mkdir -p /tmp/impulse_dosbox
    - mkdir -p build
    
  script:
    - cp -r BP /tmp/impulse_dosbox/bp
    - |
      cat > dosbox.conf << EOF
      [sdl]
      windowresolution=800x600
      output=surface
      autolock=false
      
      [dosbox]
      machine=svga_s3
      memsize=16
      
      [cpu]
      core=auto
      cputype=auto
      cycles=10000
      
      [mixer]
      nosound=true
      
      [midi]
      mpu401=none
      
      [sblaster]
      sbtype=none
      
      [gus]
      gus=false
      
      [speaker]
      pcspeaker=false
      
      [autoexec]
      mount c: /tmp/impulse_dosbox
      mount d: $PWD/source
      mount e: $PWD/output
      mount f: $PWD/include
      d:
      set PATH=c:\\bp\\bin;%PATH%
      call c:\\build.bat
      exit
      EOF
    - |
      cat > /tmp/impulse_dosbox/build.bat << 'EOF'
      @echo off
      echo === Impulse BBS Compilation ===
      echo [LOG] Checking Borland Pascal installation...
      
      if exist c:\bp\bin\bpc.exe goto bpfound
      echo [ERROR] Borland Pascal not found
      goto end
      
      :bpfound
      echo [SUCCESS] Found Borland Pascal compiler
      echo [LOG] Switching to source directory...
      d:
      echo [LOG] Current directory contents:
      dir *.pas
      
      if exist imp.pas goto impfound
      echo [ERROR] imp.pas not found
      goto end
      
      :impfound
      echo [SUCCESS] Found imp.pas in source directory
      echo [LOG] Setting PATH and starting compilation...
      
      echo [LOG] === STEP 1: BUILD PHASE ===
      echo [CMD] bpc -$G+ -B -Uf:\ -Ee:\ imp.pas
      bpc -$G+ -B -Uf:\ -Ee:\ imp.pas
      if errorlevel 1 goto buildfail
      echo [SUCCESS] Build phase completed
      goto step2
      
      :buildfail
      echo [ERROR] Build phase failed
      goto end
      
      :step2
      echo [LOG] === STEP 2: FINAL COMPILATION ===
      echo [CMD] bpc -Uf:\ -Ee:\ imp.pas
      bpc -Uf:\ -Ee:\ imp.pas
      if errorlevel 1 goto compfail
      echo [SUCCESS] Final compilation completed
      goto checkfiles
      
      :compfail
      echo [ERROR] Final compilation failed
      goto end
      
      :checkfiles
      echo [LOG] === VERIFYING OUTPUT FILES ===
      e:
      if exist IMP.EXE echo [SUCCESS] IMP.EXE created
      if exist IMP.OVR echo [SUCCESS] IMP.OVR created
      dir *.exe *.ovr
      
      :end
      echo [LOG] === BUILD PROCESS COMPLETE ===
      EOF
    - echo "Starting DOSBox compilation with enhanced logging..."
    - xvfb-run -a dosbox -conf dosbox.conf -noconsole
    - |
      if [ -f "output/IMP.EXE" ] && [ -f "output/IMP.OVR" ]; then
        echo "Compilation successful!"
        
        BUILD_DIR="build/build-$CI_PIPELINE_ID"
        mkdir -p "$BUILD_DIR"
        
        cp output/IMP.EXE "$BUILD_DIR/"
        cp output/IMP.OVR "$BUILD_DIR/"
        
        cat > "$BUILD_DIR/build-info.txt" << EOF
      Impulse BBS 7.1 Build Information
      ================================
      Build Date: $(date)
      Pipeline ID: $CI_PIPELINE_ID
      Job ID: $CI_JOB_ID
      Commit SHA: $CI_COMMIT_SHA
      Commit Message: $CI_COMMIT_MESSAGE
      Commit Author: $CI_COMMIT_AUTHOR
      
      Files:
      EOF
        ls -la "$BUILD_DIR"/*.EXE "$BUILD_DIR"/*.OVR >> "$BUILD_DIR/build-info.txt"
        
        echo "Build complete!"
        ls -la "$BUILD_DIR/"
        
        echo ""
        echo "BUILD ARTIFACTS READY:"
        echo "Browse: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/browse/build/build-$CI_PIPELINE_ID/"
        echo "Download: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/download"
        echo "IMP.EXE: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/build-$CI_PIPELINE_ID/IMP.EXE"
        echo "IMP.OVR: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/build-$CI_PIPELINE_ID/IMP.OVR"
        
        if [ -f "latest-build.html" ]; then
          sed -i "s/PIPELINE_ID_PLACEHOLDER/$CI_PIPELINE_ID/g" latest-build.html
          sed -i "s/JOB_ID_PLACEHOLDER/$CI_JOB_ID/g" latest-build.html
          sed -i "s/BUILD_DATE_PLACEHOLDER/$(date)/g" latest-build.html
          sed -i "s/COMMIT_SHA_PLACEHOLDER/$CI_COMMIT_SHORT_SHA/g" latest-build.html
          cp latest-build.html build/
          echo "Latest build page: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/latest-build.html"
        fi
        
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸŽ‰ Impulse BBS Build #'$CI_PIPELINE_ID' Complete!\nDownload: '$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/download\nBrowse: '$CI_PROJECT_URL'/-/jobs/'$CI_JOB_ID'/artifacts/browse/build/build-'$CI_PIPELINE_ID'/"}' \
          "$SLACK_WEBHOOK_URL"
        fi
        
      else
        echo "Compilation failed"
        ls -la output/ || echo "No output directory"
        exit 1
      fi
    
  artifacts:
    name: "impulse-bbs-build-$CI_PIPELINE_ID"
    paths:
      - build/build-$CI_PIPELINE_ID/
      - build/latest-build.html
    expire_in: 1 year
    public: true
    when: always

