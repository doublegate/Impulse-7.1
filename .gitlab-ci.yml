# GitLab CI/CD Pipeline for Impulse BBS Automated Builds

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2

# Only run on main branch commits
build_impulse:
  stage: build
  image: ubuntu:20.04
  only:
    - main
  before_script:
    - echo "Building Impulse BBS - Pipeline $CI_PIPELINE_ID"
    - echo "Commit $CI_COMMIT_SHORT_SHA by $CI_COMMIT_AUTHOR"
    
    # Install dependencies
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y dosbox xvfb
    
    # Create build directories
    - mkdir -p /tmp/impulse_dosbox
    - mkdir -p build
    
  script:
    # Copy Borland Pascal to DOSBox environment
    - cp -r BP /tmp/impulse_dosbox/bp
    
    # Create DOSBox configuration
    - |
      cat > dosbox.conf << EOF
      [sdl]
      windowresolution=800x600
      output=surface
      autolock=false
      
      [dosbox]
      machine=svga_s3
      memsize=16
      
      [cpu]
      core=auto
      cputype=auto
      cycles=10000
      
      [mixer]
      nosound=true
      
      [midi]
      mpu401=none
      
      [sblaster]
      sbtype=none
      
      [gus]
      gus=false
      
      [speaker]
      pcspeaker=false
      
      [autoexec]
      mount c: /tmp/impulse_dosbox
      mount d: $PWD/source
      mount e: $PWD/output
      mount f: $PWD/include
      d:
      set PATH=c:\\bp\\bin;%PATH%
      call c:\\build.bat
      exit
      EOF
    
    # Create DOS build script
    - |
      cat > /tmp/impulse_dosbox/build.bat << 'EOF'
      @echo off
      echo === Impulse BBS Compilation ===
      
      if exist c:\bp\bin\bpc.exe goto bpfound
      echo ERROR: Borland Pascal not found
      goto end
      
      :bpfound
      echo Found Borland Pascal compiler
      
      d:
      if exist imp.pas goto impfound
      echo ERROR: imp.pas not found
      goto end
      
      :impfound
      echo Found imp.pas in source directory
      
      echo Step 1: Building with -$G+ -B flags...
      bpc -$G+ -B -Uf:\ -Ee:\ imp.pas
      if errorlevel 1 goto buildfail
      echo Build step completed
      goto step2
      
      :buildfail
      echo ERROR: Build step failed
      goto end
      
      :step2
      echo Step 2: Final compilation...
      bpc -Uf:\ -Ee:\ imp.pas
      if errorlevel 1 goto compfail
      echo Compilation completed
      goto end
      
      :compfail
      echo ERROR: Final compilation failed
      
      :end
      echo Build process finished
      EOF
    
    # Run DOSBox compilation
    - echo "üöÄ Starting headless DOSBox compilation..."
    - xvfb-run -a dosbox -conf dosbox.conf -noconsole
    
    # Check results and copy to build directory
    - |
      if [ -f "output/IMP.EXE" ] && [ -f "output/IMP.OVR" ]; then
        echo "‚úÖ Compilation successful!"
        mkdir -p build/build-$CI_PIPELINE_ID
        cp output/IMP.EXE build/build-$CI_PIPELINE_ID/
        cp output/IMP.OVR build/build-$CI_PIPELINE_ID/
        
        # Create build info
        cat > build/build-$CI_PIPELINE_ID/build-info.txt << EOF
      Impulse BBS 7.1 Build Information
      ================================
      Build Date: $(date)
      Pipeline ID: $CI_PIPELINE_ID
      Commit SHA: $CI_COMMIT_SHA
      Commit Message: $CI_COMMIT_MESSAGE
      
      Files:
      EOF
        ls -la build/build-$CI_PIPELINE_ID/*.EXE build/build-$CI_PIPELINE_ID/*.OVR >> build/build-$CI_PIPELINE_ID/build-info.txt
        
        echo "üéâ Build complete!"
        ls -la build/build-$CI_PIPELINE_ID/
      else
        echo "‚ùå Compilation failed"
        echo "Output directory contents:"
        ls -la output/ || echo "No output directory"
        exit 1
      fi
    
  artifacts:
    name: "impulse-bbs-build-$CI_PIPELINE_ID"
    paths:
      - build/build-$CI_PIPELINE_ID/
    expire_in: 1 year
    public: true
    
  when: always

